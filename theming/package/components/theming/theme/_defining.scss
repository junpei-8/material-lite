@use 'sass:map';
@use './base-template';

@function light-theme($theme: ()) {
  $base: (
    foreground: map.merge(
      base-template.$light-foreground,
      map.get($theme, foreground) or ()
    ),

    background: map.merge(
      base-template.$light-background,
      map.get($theme, background) or ()
    )
  );

  @return map.merge($theme, $base);
}

@function dark-theme($theme: ()) {
  $base: (
    foreground: map.merge(
      base-template.$dark-foreground,
      map.get($theme, foreground) or ()
    ),

    background: map.merge(
      base-template.$dark-background,
      map.get($theme, background) or ()
    )
  );

  @return map.merge($theme, $base);
}

@function css-variables-theme($theme: ()) {
  $base: (
    foreground: map.merge(
      base-template.$css-variables-foreground,
      map.get($theme, foreground) or ()
    ),

    background: map.merge(
      base-template.$css-variables-background,
      map.get($theme, background) or ()
    )
  );

  @return map.merge($theme, $base);
}


@function palette($palette, $default: 500, $lighter: 100, $darker: 700, $text: $default) {
  $contrast: map.get($palette, contrast);

  @return (
    default: map.get($palette, $default),
    lighter: map.get($palette, $lighter),
    darker:  map.get($palette, $darker),
    text:    map.get($palette, $text),

    default-contrast: map.get($contrast, $default),
    lighter-contrast: map.get($contrast, $lighter),
    darker-contrast:  map.get($contrast, $darker)
  );
}

@function css-variables-palette($prefix) {
  $prefix: --ml-#{$prefix};

  @return (
    default: var(#{$prefix}),
    lighter: var(#{$prefix}-lighter),
    darker:  var(#{$prefix}-darker),
    text:    var(#{$prefix}-text),

    default-contrast: var(#{$prefix}-contrast),
    lighter-contrast: var(#{$prefix}-lighter-contrast),
    darker-contrast:  var(#{$prefix}-dark-contrast)
  );
}

@function css-variables-color($prefixes) {
  $result: ();

  @each $prefix in $prefixes {
    $result: map.set($result, $prefix, css-variables-palette($prefix));
  }

  @return $result;
}
